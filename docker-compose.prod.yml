# ================================
# Docker Compose para Producción
# ple.ad writer v2.0
# ================================

version: '3.8'

services:
  # ================================
  # Aplicación Next.js
  # ================================
  app:
    build:
      context: .
      dockerfile: Dockerfile.prod
      target: runner
    container_name: plead-writer-app
    restart: unless-stopped
    
    # Variables de entorno para producción
    environment:
      - NODE_ENV=production
      - PORT=3000
      - HOSTNAME=0.0.0.0
      - NEXT_TELEMETRY_DISABLED=1
    
    # Variables de entorno desde archivo
    env_file:
      - .env.production
    
    # Límites de recursos
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 512M
    
    # Configuración de logs
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    
    # Health check
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    
    # Red interna
    networks:
      - plead-network
    
    # No exponer puerto directamente (va a través de nginx)
    expose:
      - "3000"

  # ================================
  # Nginx Reverse Proxy
  # ================================
  nginx:
    image: nginx:1.25-alpine
    container_name: plead-writer-nginx
    restart: unless-stopped
    
    # Puerto público
    ports:
      - "80:80"
      - "443:443"
    
    # Configuración de nginx
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - nginx-logs:/var/log/nginx
      - nginx-cache:/var/cache/nginx
    
    # Límites de recursos
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 256M
        reservations:
          cpus: '0.1'
          memory: 64M
    
    # Configuración de logs
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    
    # Health check
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 10s
    
    # Dependencias
    depends_on:
      app:
        condition: service_healthy
    
    # Red
    networks:
      - plead-network

  # ================================
  # Monitor de logs (opcional)
  # ================================
  logrotate:
    image: alpine:3.18
    container_name: plead-writer-logrotate
    restart: unless-stopped
    
    # Comando para rotar logs
    command: >
      sh -c "
        while true; do
          find /var/log -name '*.log' -size +50M -exec truncate -s 0 {} \;
          sleep 3600
        done
      "
    
    volumes:
      - nginx-logs:/var/log/nginx
    
    # Límites mínimos
    deploy:
      resources:
        limits:
          cpus: '0.1'
          memory: 32M

# ================================
# Configuración de red
# ================================
networks:
  plead-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

# ================================
# Volúmenes persistentes
# ================================
volumes:
  nginx-logs:
    driver: local
  nginx-cache:
    driver: local

# ================================
# Configuración adicional
# ================================
x-common-variables: &common-variables
  TZ: UTC
  LANG: en_US.UTF-8
  LC_ALL: en_US.UTF-8 